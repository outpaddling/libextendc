#ifndef _xtend_h_
#define _xtend_h_

#ifndef _STDIO_H_
#include <stdio.h>
#endif

#ifndef _SYS_TIME_H_
#include <sys/time.h>
#endif

#ifndef _SYS_STAT_H_
#include <sys/stat.h>   // mode_t on Darwin
#endif

#ifdef __linux__
#define strlcpy(dest,src,len)   strcpy(dest,src)
#define strlcat(dest,src,len)   strcat(dest,src)
#endif

#ifndef __bool_true_false_are_defined
#include <stdbool.h>
#endif

#if !defined(_STDARG_H_) && !defined(__STDARG_H__)
#include <stdarg.h>
#endif

#define LCM(a,b)    ((a)*(b)/gcd(a,b))

#define XT_CMD_MAX_CHARS    4096
#define XT_FORMAT_MAX_CHARS 4096

// FIXME: Return this instead of EOF in dsv_read*()
// Don't trust that EOF is -1 on all platforms
#define XT_READ_EOF             -1
#define XT_READ_MALLOC_FAILED   -2
#define XT_READ_BUFF_OVERFLOW   -3

#define XT_DATA_OK              0
#define XT_DATA_INVALID         -1      // Catch-all for non-specific error
#define XT_DATA_OUT_OF_RANGE    -2

#ifndef ISIDENT
#define ISIDENT(c)  ( isalnum(c) | ((c)=='_') )
#endif

/*
 *  Process control
 */

/* spawn*() parent_action */
#define P_NOWAIT  0
#define P_WAIT    1

/* spawn*() echo */
#define P_NOECHO  0
#define P_ECHO    1

#define P_TERM_STATUS(s)    ((s) & 0xff)
#define P_EXIT_CODE(s)      (((s) & 0x0000ff00) >> 8)
#define P_EXEC_FAILED(s)    ((s) & 0x8000)

/*
 *  Delimiter-separated data
 */

#define DSV_INIT                { 0, 0, NULL, NULL }
#define DSV_FIELD_MAX_CHARS     32767

#define DSV_FIELD(line,col)     ((line)->fields[col-1]) // 1-based column

typedef struct
{
    size_t      array_size,
		num_fields;
    char        **fields,
		*delims;
}   dsv_line_t;

/*
 *  Generated by /home/bacon/scripts/gen-get-set
 *
 *  Accessor macros.  Use these to access structure members from functions
 *  outside the dsv_line_t class.
 *
 *  These generated macros are not expected to be perfect.  Check and edit
 *  as needed before adding to your code.
 */

#define DSV_LINE_ARRAY_SIZE(ptr)        ((ptr)->array_size)
#define DSV_LINE_NUM_FIELDS(ptr)        ((ptr)->num_fields)
#define DSV_LINE_FIELDS(ptr)            ((ptr)->fields)
#define DSV_LINE_FIELDS_AE(ptr,c)       ((ptr)->fields[c])
#define DSV_LINE_DELIMS(ptr)            ((ptr)->delims)
#define DSV_LINE_DELIMS_AE(ptr,c)       ((ptr)->delims[c])

/*
 *  Generated by /home/bacon/scripts/gen-get-set
 *
 *  Mutator macros for setting with no sanity checking.  Use these to
 *  set structure members from functions outside the dsv_line_t
 *  class.  These macros perform no data validation.  Hence, they achieve
 *  maximum performance where data are guaranteed correct by other means.
 *  Use the mutator functions (same name as the macro, but lower case)
 *  for more robust code with a small performance penalty.
 *
 *  These generated macros are not expected to be perfect.  Check and edit
 *  as needed before adding to your code.
 */

#define DSV_LINE_SET_ARRAY_SIZE(ptr,val)        ((ptr)->array_size = (val))
#define DSV_LINE_SET_NUM_FIELDS(ptr,val)        ((ptr)->num_fields = (val))
#define DSV_LINE_SET_FIELDS(ptr,val)            ((ptr)->fields = (val))
#define DSV_LINE_SET_FIELDS_CPY(ptr,val,array_size) \
    for (size_t c = 0; c < (array_size); ++c) (ptr)->fields[c] = val[c];
#define DSV_LINE_SET_FIELDS_AE(ptr,c,val)       ((ptr)->fields[c] = (val))
#define DSV_LINE_SET_DELIMS(ptr,val)            ((ptr)->delims = (val))
#define DSV_LINE_SET_DELIMS_CPY(ptr,val,array_size) strlcpy((ptr)->delims,val,array_size)
#define DSV_LINE_SET_DELIMS_AE(ptr,c,val)       ((ptr)->delims[c] = (val))

#include "xtend-protos.h"

#endif  // _xtend_h_
