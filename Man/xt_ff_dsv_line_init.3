\" Generated by c2man from xt_ff_dsv_line_init.c
.TH xt_ff_dsv_line_init 3

.SH NAME
xt_ff_dsv_line_init() - Initialize generic tabular data object

.SH LIBRARY
\" Indicate #includes, library name, -L and -l flags
.nf
.na
#include <xtend/ff-dsv.h>
-lxtend
.ad
.fi

\" Convention:
\" Underline anything that is typed verbatim - commands, etc.
.SH SYNOPSIS
.nf
.na
void    xt_ff_dsv_line_init(xt_ff_dsv_line_t *xt_ff_dsv_line)
.ad
.fi

.SH ARGUMENTS
.nf
.na
xt_ff_dsv_line    Pointer to a xt_ff_dsv_lint_t object.
.ad
.fi

.SH DESCRIPTION

Initialize a xt_ff_dsv_line_t structure.
The xt_ff_dsv_line_t structure contains an array of strings, each
holding one field from the line, and an an array of delimiters,
each holding the character that ended the corresponding field.
Note that each field could potentially end with a different
delimiter, as multiple delimiters can be specified.

Normally does not need to be called explicitly, since it is
called by xt_ff_dsv_line_new().

.SH EXAMPLES
.nf
.na

xt_ff_dsv_line_t  *line = xt_ff_dsv_line_new();

while ( xt_ff_dsv_line_read(line, stdin, "t") != EOF )
{
    xt_ff_dsv_line_write(line, stdout);
    xt_ff_dsv_line_free(line);
}

// Reinitialize
xt_ff_dsv_line_init(line);
.ad
.fi

.SH SEE ALSO

xt_ff_dsv_line_new(3), xt_ff_dsv_line_free(3),
xt_ff_dsv_line_read(3), xt_ff_dsv_line_write(3), xt_ff_dsv_line_copy(3),
xt_ff_dsv_read_field(3), xt_ff_dsv_read_field_malloc(3),
xt_ff_dsv_skip_field(3), xt_ff_dsv_skip_rest_of_line(3)

