\" Generated by c2man from xt_ff_dopen.c
.TH xt_ff_dopen 3

.SH NAME
xt_ff_dopen() - Create a fast file stream from a file descriptor

.SH LIBRARY
\" Indicate #includes, library name, -L and -l flags
.nf
.na
#include <fcntl.h>
#include <xtend/fast-file.h>
-lxtend
.ad
.fi

\" Convention:
\" Underline anything that is typed verbatim - commands, etc.
.SH SYNOPSIS
.nf
.na
xt_ff_t *xt_ff_dopen(int fd, int flags)
.ad
.fi

.SH ARGUMENTS
.nf
.na
fd          Open file descriptor to which stream is attached
flags       Bit flags passed to open(3)
.ad
.fi

.SH DESCRIPTION

.B xt_ff_dopen(3)
initializes a xt_ff_t stream, much as fdopen(3) does for a FILE
stream.  Unlike fdopen(3), xt_ff_dopen(3) takes the same bit mask
argument as open(2) to determine the open mode.
See open(3) for details.

An optimally sized buffer for the underlying filesystem is allocated,
along with additional space for limited xt_ff_ungetc(3) operations.

The xt_ff_t system is simpler than and much faster than
traditional FILE on typical systems.  It is intended for processing
large files character-by-character, where low-level block I/O
is not convenient, but FILE I/O causes a bottleneck.

.SH RETURN VALUES

A pointer to a xt_ff_t object on success, NULL on failure

.SH EXAMPLES
.nf
.na

xt_ff_t *stream;
char    *filename;
int     fd;

fd = open(filename, O_RDONLY);
stream = xt_ff_dopen(fd, O_RDONLY);
.ad
.fi

.SH SEE ALSO

xt_ff_open(3), open(3)

