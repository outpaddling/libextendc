\" Generated by c2man from ffstdout.c
.TH ffstdout 3

.SH LIBRARY
\" Indicate #includes, library name, -L and -l flags
.nf
.na
#include <xtend/fast-file.h>
-lxtend
.ad
.fi

\" Convention:
\" Underline anything that is typed verbatim - commands, etc.
.SH SYNOPSIS
.PP
.nf
.na
ffile_t *ffstdout()
.ad
.fi

.SH ARGUMENTS
.nf
.na
None
.ad
.fi

.SH DESCRIPTION

.B ffstdout()
is a simple wrapper function for connecting file descriptor 1
to an ffile_t object using ffdopen(3).  This is useful for
high-performance filter programs, where using the traditional
FILE *stdout would cause a bottleneck.

The ffile_t system is simpler than and several times as
fast as FILE on typical systems.  It is intended for processing
large files character-by-character, where low-level block I/O
is not convenient, but FILE I/O causes a bottleneck.

.SH RETURN VALUES

Pointer to an ffile_t object if successful, NULL otherwise

.SH EXAMPLES
.nf
.na

ffile_t *stream;

// "-" as a filename argument traditionally indicates stdout
if ( strcmp(argv[arg], "-") == 0 )
    stream = ffstdout();
else
    stream = ffopen(argv[arg], O_WRONLY|O_CREAT|O_TRUNC);
.ad
.fi

.SH SEE ALSO

ffopen(3), ffdopen(3)

