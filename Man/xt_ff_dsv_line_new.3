\" Generated by c2man from xt_ff_dsv_line_new.c
.TH xt_ff_dsv_line_new 3

.SH NAME
xt_ff_dsv_line_new() - Create a new generic tabular data object

.SH LIBRARY
\" Indicate #includes, library name, -L and -l flags
.nf
.na
#include <xtend/ff-dsv.h>
-lxtend
.ad
.fi

\" Convention:
\" Underline anything that is typed verbatim - commands, etc.
.SH SYNOPSIS
.nf
.na
xt_ff_dsv_line_t  *xt_ff_dsv_line_new(void)
.ad
.fi

.SH ARGUMENTS
.nf
.na
None
.ad
.fi

.SH DESCRIPTION

Allocate and initialize a xt_ff_dsv_line_t structure.
The xt_ff_dsv_line_t structure contains an array of strings, each
holding one field from the line, and an an array of delimiters,
each holding the character that ended the corresponding field.
Note that each field could potentially end with a different
delimiter, as multiple delimiters can be specified.

.SH RETURN VALUES

Pointer to a xt_ff_dsv_lint_t object, or NULL if malloc() failed.

.SH EXAMPLES
.nf
.na

xt_ff_dsv_line_t  *line = xt_ff_dsv_line_new();

while ( xt_ff_dsv_line_read(line, stdin, "t") != EOF )
{
    xt_ff_dsv_line_write(line, stdout);
    xt_ff_dsv_line_free(line);
}
.ad
.fi

.SH SEE ALSO

xt_ff_dsv_line_new(3), xt_ff_dsv_line_free(3),
xt_ff_dsv_line_read(3), xt_ff_dsv_line_write(3), xt_ff_dsv_line_copy(3),
xt_ff_dsv_read_field(3), xt_ff_dsv_read_field_malloc(3),
xt_ff_dsv_skip_field(3), xt_ff_dsv_skip_rest_of_line(3)

