\" Generated by c2man from dsv_line_new.c
.TH dsv_line_new 3

.SH NAME
dsv_line_new() - Create a new generic tabular data object

.SH LIBRARY
\" Indicate #includes, library name, -L and -l flags
.nf
.na
#include <xtend/dsv.h>
-lxtend
.ad
.fi

\" Convention:
\" Underline anything that is typed verbatim - commands, etc.
.SH SYNOPSIS
.nf
.na
dsv_line_t  *dsv_line_new(void)
.ad
.fi

.SH ARGUMENTS
.nf
.na
None
.ad
.fi

.SH DESCRIPTION

Allocate and initialize a dsv_line_t structure.
The dsv_line_t structure contains an array of strings, each
holding one field from the line, and an an array of delimiters,
each holding the character that ended the corresponding field.
Note that each field could potentially end with a different
delimiter, as multiple delimiters can be specified.

.SH RETURN VALUES

Pointer to a dsv_lint_t object, or NULL if malloc() failed.

.SH EXAMPLES
.nf
.na

dsv_line_t  *line = dsv_line_new();

while ( dsv_line_read(line, stdin, "t") != EOF )
{
    dsv_line_write(line, stdout);
    dsv_line_free(line);
}
.ad
.fi

.SH SEE ALSO

dsv_line_new(3), dsv_line_free(3),
dsv_line_read(3), dsv_line_write(3), dsv_line_copy(3),
dsv_read_field(3), dsv_read_field_malloc(3),
dsv_skip_field(3), dsv_skip_rest_of_line(3)

