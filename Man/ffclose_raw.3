\" Generated by c2man from ffclose_raw.c
.TH ffclose_raw 3

.SH LIBRARY
\" Indicate #includes, library name, -L and -l flags
.nf
.na
#include <xtend/fast-file.h>
-lxtend
.ad
.fi

\" Convention:
\" Underline anything that is typed verbatim - commands, etc.
.SH SYNOPSIS
.PP
.nf
.na
int     ffclose_raw(ffile_t *stream)
.ad
.fi

.SH ARGUMENTS
.nf
.na
stream  Pointer to an ffile_t object opened by ffopen(3)
.ad
.fi

.SH DESCRIPTION

.B ffclose_raw()
closes a ffile_t stream opened by ffopen(3).  It writes out any
remaining data in the output buffer, deallocates memory allocated
by ffopen(3), and closes the underlying file descriptor opened by
open(3).

The ffile_t system is simpler than and several times as
fast as FILE on typical systems.  It is intended for processing
large files character-by-character, where low-level block I/O
is not convenient, but FILE I/O causes a bottleneck.

.SH RETURN VALUES

The return status of the underlying close(3) call

.SH EXAMPLES
.nf
.na

char    *infilename, *outfilename;
ffile_t *instream, *outstream;
int     ch;

if ( (instream = ffopen(infilename, O_RDONLY)) == NULL )
{
    fprintf(stderr, "Cannot open %s for reading.n", infilename);
    exit(EX_NOINPUT);
}
if ( (outstream = ffopen(outfilename, O_WRONLY|O_CREAT|O_TRUNC)) == NULL )
{
    fprintf(stderr, "Cannot open %s for writing.n", outfilename);
    exit(EX_NOINPUT);
}
while ( (ch = FFGETC(stream)) != EOF )
    FFPUTC(ch, outstream);
ffclose_raw(instream);
ffclose_raw(outstream);
.ad
.fi

.SH SEE ALSO

ffopen(3), ffgetc(3), ffputc(3)

