\" Generated by c2man from xt_ff_close_raw.c
.TH xt_ff_close_raw 3

.SH LIBRARY
\" Indicate #includes, library name, -L and -l flags
.nf
.na
#include <xtend/fast-file.h>
-lxtend
.ad
.fi

\" Convention:
\" Underline anything that is typed verbatim - commands, etc.
.SH SYNOPSIS
.PP
.nf
.na
int     xt_ff_close_raw(xt_ff_t *stream)
.ad
.fi

.SH ARGUMENTS
.nf
.na
stream  Pointer to an xt_ff_t object opened by xt_ff_open(3)
.ad
.fi

.SH DESCRIPTION

.B xt_ff_close_raw()
closes a xt_ff_t stream opened by xt_ff_open(3).  It writes out any
remaining data in the output buffer, deallocates memory allocated
by xt_ff_open(3), and closes the underlying file descriptor opened by
open(3).

The xt_ff_t system is simpler than and several times as
fast as FILE on typical systems.  It is intended for processing
large files character-by-character, where low-level block I/O
is not convenient, but FILE I/O causes a bottleneck.

.SH RETURN VALUES

The return status of the underlying close(3) call

.SH EXAMPLES
.nf
.na

char    *infilename, *outfilename;
xt_ff_t *instream, *outstream;
int     ch;

if ( (instream = xt_ff_open(infilename, O_RDONLY)) == NULL )
{
    fprintf(stderr, "Cannot open %s for reading.n", infilename);
    exit(EX_NOINPUT);
}
if ( (outstream = xt_ff_open(outfilename, O_WRONLY|O_CREAT|O_TRUNC)) == NULL )
{
    fprintf(stderr, "Cannot open %s for writing.n", outfilename);
    exit(EX_NOINPUT);
}
while ( (ch = xt_ff_getc(stream)) != EOF )
    xt_ff_putc(ch, outstream);
xt_ff_close_raw(instream);
xt_ff_close_raw(outstream);
.ad
.fi

.SH SEE ALSO

xt_ff_open(3), xt_ff_getc(3), xt_ff_putc(3)

