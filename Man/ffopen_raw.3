\" Generated by c2man from ffopen_raw.c
.TH ffopen_raw 3

.SH LIBRARY
\" Indicate #includes, library name, -L and -l flags
.nf
.na
#include <fcntl.h>
#include <xtend/fast-file.h>
-lxtend
.ad
.fi

\" Convention:
\" Underline anything that is typed verbatim - commands, etc.
.SH SYNOPSIS
.PP
.nf
.na
ffile_t *ffopen_raw(const char *filename, int flags)
.ad
.fi

.SH ARGUMENTS
.nf
.na
filename    Absolute or relative path of the file to open
flags       Bit flags passed to open(3)
.ad
.fi

.SH DESCRIPTION

.B ffopen_raw()
initializes a ffile_t stream, much as fopen() does for a FILE
stream.  Unlike fopen(), ffopen_raw() takes the same bit mask
argument as open() to determine the open mode.
See open(3) for details.

An optimally sized buffer for the underlying filesystem is allocated,
along with additional space for limited ffungetc() operations.

The ffile_t system is simpler than and several times as
fast as FILE on typical systems.  It is intended for processing
large files character-by-character, where low-level block I/O
is not convenient, but FILE I/O causes a bottleneck.

.SH RETURN VALUES

A pointer to a ffile_t object on success, NULL on failure

.SH EXAMPLES
.nf
.na

ffile_t *stream;
char    *filename;

// Read only
stream = ffopen_raw(filename, O_RDONLY);

// Overwrite
stream = ffopen_raw(filename, O_WRONLY|O_CREAT|O_TRUNC);

// Append
stream = ffopen_raw(filename, O_WRONLY|O_APPEND);
.ad
.fi

.SH SEE ALSO

open(3), ffgetc(3), ffputc(3), ffungetc(3), ffclose(3)

