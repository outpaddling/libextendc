\" Generated by c2man from xt_malloc.c
.TH xt_malloc 3

.SH LIBRARY
\" Indicate #includes, library name, -L and -l flags
.nf
.na
#include <xtend/mem.h>
-lxtend
.ad
.fi

\" Convention:
\" Underline anything that is typed verbatim - commands, etc.
.SH SYNOPSIS
.nf
.na
void    *xt_malloc(size_t nelem, size_t size)
.ad
.fi

.SH ARGUMENTS
.nf
.na
nelem:  Number of objects to allocate
size:   Size of a single object
.ad
.fi

.SH DESCRIPTION

xt_malloc() is a simple wrapper around malloc(3) that requires two
arguments representing the number of objects to allocate and the
size of an element.  This prevents the very common mistake with
malloc(3) of forgetting to multiply by the size of an element.

Specifying the size using sizeof(*variable) has the advantage of
being type-independent.  I.e. if you change the type of the variable,
this code need not be updated.  Simply add one * to whatever
the return value is assigned to.

.SH RETURN VALUES

Address of the newly allocated array, or NULL if allocation failed

.SH EXAMPLES
.nf
.na

size_t      widget_list_size = 1024;
widget_t    *widgets;

widgets = xt_malloc(widget_list_size, sizeof(*widgets));
.ad
.fi

.SH SEE ALSO

malloc(3)

