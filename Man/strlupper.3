\" Generated by c2man from strlupper.c
.TH strlupper 3

.SH LIBRARY
\" Indicate #includes, library name, -L and -l flags
.nf
.na
#include <xtend/string.h>
-lxtend
.ad
.fi

\" Convention:
\" Underline anything that is typed verbatim - commands, etc.
.SH SYNOPSIS
.PP
.nf
.na
size_t  strlupper(char *dest, const char *src, size_t dest_size)
.ad
.fi

.SH ARGUMENTS
.nf
.na
src         Pointer to null-terminated string to be copied
dest        Pointer to a character array to receive the copy
dest_size   Size of the destination array
.ad
.fi

.SH DESCRIPTION

strlupper(3) copies a string from src to dest, up to a maximum of
dest_size - 1 characters.
It behaves exactly like strlcpy(3), except that any lower
case characters in the string are converted to upper case.

.SH RETURN VALUES

Size of the src string.  If this differs from dest_size, then
we knoiw the copy is truncated.

.SH EXAMPLES
.nf
.na

char    src[] = "Some text",
dest    [DEST_SIZE + 1];

if ( strlupper(dest, src, DEST_SIZE + 1) != DEST_SIZE + 1 )
    fputs("Warning: String truncated.n", stderr);
.ad
.fi

.SH SEE ALSO

strllower(3), strlcpy(3), strlcat(3)

